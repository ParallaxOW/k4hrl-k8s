apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: cluster-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata: 
  name: sql-data
spec: 
  capacity: 
    storage: 2Gi
  volumeMode: Filesystem
  accessModes: 
    - ReadWriteOnce
  storageClassName: cluster-storage
  local:
    path: /temp/data/db
  nodeAffinity: 
    required: 
      nodeSelectorTerms: 
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values: 
            - k4hrl-worker01

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sql-pvc
spec:
  resources:
    requests:
      storage: 2Gi
  storageClassName: cluster-storage
  accessModes:
    - ReadWriteOnce

---

apiVersion: v1
kind: Service
metadata:
  name: mssql-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: LoadBalancer

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mssql
spec:
  selector:
    matchLabels:
      app: mssql
  serviceName: mssql
  replicas: 1
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server
        ports:
        - containerPort: 1433
          name: sqlaccess
        - containerPort: 1432
          name: sqladmin
        volumeMounts:
        - name: sql-data
          mountPath: /data/db
        env:
          - name: MSSQL_PID
            value: "Developer"
          - name: ACCEPT_EULA
            value: "Y"
          - name: MSSQL_SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mssql-secret
                key: SA_PASSWORD 
      volumes: 
      - name: sql-volume
        persistentVolumeClaim: 
          claimName: sql-pvc


